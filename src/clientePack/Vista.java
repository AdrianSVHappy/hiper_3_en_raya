/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clientePack;

import java.util.ArrayList;
import javax.swing.JButton;

/**
 *
 * @author adria
 */
public class Vista extends javax.swing.JFrame {

    private Cliente cli;

    /**
     * Creates new form Vista
     */
    public Vista(Cliente cli) {
        this.cli = cli;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        posicionesTablero = new javax.swing.ButtonGroup();
        fondo = new javax.swing.JPanel();
        tablero = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        auxiliar = new javax.swing.JButton();

        lista = new ArrayList<javax.swing.JButton>();
        turno = false;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setMaximumSize(new java.awt.Dimension(500, 500));
        fondo.setMinimumSize(new java.awt.Dimension(500, 500));
        fondo.setPreferredSize(new java.awt.Dimension(500, 500));

        tablero.setBackground(new java.awt.Color(188, 124, 189));
        tablero.setMaximumSize(new java.awt.Dimension(450, 350));
        tablero.setMinimumSize(new java.awt.Dimension(450, 350));
        tablero.setPreferredSize(new java.awt.Dimension(450, 350));
        tablero.setLayout(new java.awt.GridLayout(3, 3, 2, 2));

        lista.add(jButton2);
        lista.add(jButton3);
        lista.add(jButton4);
        lista.add(jButton5);
        lista.add(jButton6);
        lista.add(jButton7);
        lista.add(jButton8);
        lista.add(jButton9);
        lista.add(jButton10);


        //Guardo los botones en un ArrayList para facilitar el control, tambien les doy estética y evento
        for (int i = 0; i < lista.size(); i++) {
            lista.get(i).setFont(new java.awt.Font("Comic Sans MS", 1, 48));
            lista.get(i).setText(" ");
            posicionesTablero.add(lista.get(i));

            //Evento para saber si se ha pulsado una casilla y ocuparla si es posible
            int finalI = i;
            lista.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    if(turno) {
                        identificar(finalI + "");
                        if (ocupar(finalI, new Ficha('X'))) {
                            turno = false;
                        }
                    }
                }
            });
            tablero.add(lista.get(i));

        }

        //Boton auxiliar y temporal para saltarme turno
        auxiliar.setText("AUX");
        auxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                System.out.println("AUXILIAR");
                turno = true;
                //ocupar(5, new Ficha('O'));
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
                fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(tablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(25, 25, 25))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(auxiliar)
                                .addGap(180, 180, 180))
        );
        fondoLayout.setVerticalGroup(
                fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(auxiliar)
                                .addGap(50, 50, 50)
                                .addComponent(tablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });*/
    }


    //Set y Get para saber si es el turno del Jugador
    public boolean isTurno() {
        return turno;
    }
    public void setTurno(boolean turno) {
        this.turno = turno;
    }

    /**
     * Funcion para enviar la posición que el cliente ha pulsado en el tablero
     * @param pos la posición en el arrray
     */
    public void identificar(String pos) {
       System.out.println("POS -> " + pos);
       this.cli.traducir(pos);
    }

    /**
     * Función para ocupar una casilla
     * @param pos posición a ocupar
     * @param ficha ficha que la va a ocupar
     * @return (boolean) True -> La casilla se ha ocupado con exito / False -> La casilla ya estaba ocupada
     */
    public boolean ocupar(int pos, Ficha ficha) {
        boolean ret = false;

        if(lista.get(pos).getText().equals(" ")) {
            lista.get(pos).setText(ficha.getJugador() + "");
            lista.get(pos).setForeground(ficha.getColor());
            System.out.println("S;" + ficha.getJugador() + ";" + pos);
            System.out.println(turno);
            ret = true;
        }

        return ret;

    }

    // Variables declaration - do not modify
    private javax.swing.JButton auxiliar;
    private javax.swing.JPanel fondo;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.ButtonGroup posicionesTablero;
    private ArrayList<javax.swing.JButton> lista;
    private javax.swing.JPanel tablero;
    private boolean turno;

    // End of variables declaration
}
